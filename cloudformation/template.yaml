Parameters:
  SubscriptionEmail:
    Type: String
Resources:
  MessageQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: Ankur-SQS-Queue
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f346abf4-5072-4e17-957c-a1cf4b4a1cd3
  EventSourceMapping:
    Type: 'AWS::Lambda::EventSourceMapping'
    Properties:
      EventSourceArn: !GetAtt 
        - MessageQueue
        - Arn
      FunctionName: !Ref LambdaFunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 24b01179-7490-4beb-9ec8-66902b5279c0
  SNSTopic:
    Type: 'AWS::SNS::Topic'
    Properties:
      DisplayName: Ankur-Message-Topic
      TopicName: Ankur-Message-Topic
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 17b29e7b-fd3c-4017-ae31-0b5910367050
  IAMLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: Ankur-QueueProcessor-LambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: Ankur-QueueProcessor-LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: SQS
                Effect: Allow
                Action:
                  - 'sqs:ReceiveMessage'
                  - 'sqs:DeleteMessage'
                  - 'sqs:GetQueueAttributes'
                Resource:
                  - !GetAtt 
                    - MessageQueue
                    - Arn
              - Sid: SNS
                Effect: Allow
                Action:
                  - 'sns:Publish'
                Resource: !Ref SNSTopic
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 114739c1-2e35-4829-b419-9e35a06a07b5
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: QueueProcessor-Lambda
      Role: !GetAtt 
        - IAMLambdaRole
        - Arn
      PackageType: Zip
      Runtime: nodejs14.x
      Handler: index.handler
      Code:
        S3Bucket: ankur-tpm-1845-code
        S3Key: index.zip
      Environment:
        Variables:
          snsARN: !Ref SNSTopic
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 11f1fef7-2575-453d-8c50-daeaa5ee043c
  SNSTopicSubscription:
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref SubscriptionEmail
      Protocol: EMAIL
      TopicArn: !Ref SNSTopic
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f33dd7c0-1c8d-49dc-ae07-cffa4064f390
Metadata:
  'AWS::CloudFormation::Designer':
    17b29e7b-fd3c-4017-ae31-0b5910367050:
      size:
        width: 60
        height: 60
      position:
        x: 390
        'y': 210
      z: 1
      embeds: []
    f346abf4-5072-4e17-957c-a1cf4b4a1cd3:
      size:
        width: 60
        height: 60
      position:
        x: 180
        'y': 90
      z: 1
      embeds: []
    114739c1-2e35-4829-b419-9e35a06a07b5:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 210
      z: 1
      embeds: []
    f33dd7c0-1c8d-49dc-ae07-cffa4064f390:
      size:
        width: 60
        height: 60
      position:
        x: 580
        'y': 210
      z: 1
      embeds: []
      isassociatedwith:
        - 17b29e7b-fd3c-4017-ae31-0b5910367050
    24b01179-7490-4beb-9ec8-66902b5279c0:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 90
      z: 1
      embeds: []
    11f1fef7-2575-453d-8c50-daeaa5ee043c:
      size:
        width: 60
        height: 60
      position:
        x: 60
        'y': 90
      z: 1
      embeds: []
